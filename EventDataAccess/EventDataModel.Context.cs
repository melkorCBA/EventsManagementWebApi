//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class eventMangerEntities : DbContext
    {
        public eventMangerEntities()
            : base("name=eventMangerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<PublicEvent> PublicEvents { get; set; }
    
        public virtual int spAddUser(string pEmail, string pPassword, string pFullName, ObjectParameter responseMessage, ObjectParameter status)
        {
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pPasswordParameter = pPassword != null ?
                new ObjectParameter("pPassword", pPassword) :
                new ObjectParameter("pPassword", typeof(string));
    
            var pFullNameParameter = pFullName != null ?
                new ObjectParameter("pFullName", pFullName) :
                new ObjectParameter("pFullName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddUser", pEmailParameter, pPasswordParameter, pFullNameParameter, responseMessage, status);
        }
    
        public virtual int spLogin(string pEmail, string pPassword, ObjectParameter responseMessage, ObjectParameter loggedUserID, ObjectParameter status)
        {
            var pEmailParameter = pEmail != null ?
                new ObjectParameter("pEmail", pEmail) :
                new ObjectParameter("pEmail", typeof(string));
    
            var pPasswordParameter = pPassword != null ?
                new ObjectParameter("pPassword", pPassword) :
                new ObjectParameter("pPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLogin", pEmailParameter, pPasswordParameter, responseMessage, loggedUserID, status);
        }
    
        public virtual ObjectResult<spGetAllEvents_Result> spGetAllEvents(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllEvents_Result>("spGetAllEvents", userIDParameter);
        }
    
        public virtual ObjectResult<spGetAllEvents1_Result> spGetAllEvents1(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllEvents1_Result>("spGetAllEvents1", userIDParameter);
        }
    }
}
